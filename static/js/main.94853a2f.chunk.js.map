{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","checkIfUrl","url","test","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setTouched","urlError","setUrlError","hasError","isUrlInput","htmlFor","classNames","type","placeholder","e","onBlur","initialFormValues","NewMovie","onAdd","formValues","setFormValues","count","setCount","target","prevState","isDisabled","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94853a2f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState, ChangeEvent } from 'react';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  required?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst getRandomDigits = () => Math.random().toString().slice(2);\n\nexport const checkIfUrl = (url: string) => {\n  const pattern\n    // eslint-disable-next-line max-len\n    = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const [urlError, setUrlError] = useState(false);\n\n  const hasError = touched && required && !value;\n  const isUrlInput = name === 'imdbUrl' || name === 'imgUrl';\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          name={name}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={(e) => {\n            onChange(e);\n            setUrlError(false);\n          }}\n          onBlur={() => {\n            if (value && isUrlInput) {\n              setUrlError(!checkIfUrl(value));\n            }\n\n            setTouched(true);\n          }}\n        />\n      </div>\n\n      {hasError && <p className=\"help is-danger\">{`${label} is required`}</p>}\n\n      {urlError && (\n        <p className=\"help is-danger\">You should input proper URL</p>\n      )}\n    </div>\n  );\n};\n","import { ChangeEvent, FormEventHandler, useState } from 'react';\nimport { TextField, checkIfUrl } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype NewMovieProps = {\n  onAdd: (movie: Movie) => void;\n};\n\nconst initialFormValues: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie = ({ onAdd }: NewMovieProps) => {\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [count, setCount] = useState(0);\n\n  const {\n    title, description, imdbId, imdbUrl, imgUrl,\n  } = formValues;\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n\n    setFormValues((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const onSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n\n    onAdd(formValues);\n\n    setFormValues(initialFormValues);\n    setCount((prevState) => prevState + 1);\n  };\n\n  const isDisabled = !title\n    || !imdbId\n    || !imdbUrl\n    || !imgUrl\n    || !checkIfUrl(imdbUrl)\n    || !checkIfUrl(imdbUrl);\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={onSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        onChange={onChange}\n        value={description}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        onChange={onChange}\n        value={imgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        onChange={onChange}\n        value={imdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        onChange={onChange}\n        value={imdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\n\nimport './App.scss';\n\nimport { Movie } from './types/Movie';\n\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMovies((prevState) => [...prevState, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}